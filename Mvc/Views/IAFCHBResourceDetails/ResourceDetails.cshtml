@model SitefinityWebApp.Mvc.Models.IAFCHandBookResourceModel

@{var openDocumentLink = false;}
@{var youTubeEmbeded = string.Empty;}
<div class="box box-container">
	<div class="resources-breadcrumbs"><span>@Model.ResourceDetails.Category.ParentCategoryTitle</span> > <a href="@Model.ResourceDetails.Category.CategoryUrl"><span>@Model.ResourceDetails.Category.CategoryTitle</span></a> > @Model.ResourceTitle </div>

	<div class="resources-single">
		<div class="resources-single__left">
			<div class="resources-single__left_post">
				<div class="resources-single__left_post_video">
					@if (Model.ResourceDetails.VideoEmbedCode != null && Model.ResourceDetails.VideoEmbedCode != String.Empty)
					{
						{ youTubeEmbeded = Model.ResourceDetails.VideoEmbedCode.Replace("youtu.be", "youtube.com/embed");
						  youTubeEmbeded = youTubeEmbeded.Replace("youtube.com/watch?v=", "youtube.com/embed/");
						}
						<iframe  height="315"
								src="@youTubeEmbeded">
						</iframe>
					}
				</div>
				<div class="resources-single__left_post_title">
					<h5>@Model.ResourceDetails.ResourceTitle</h5>
					<div>@Html.Raw(Model.ResourceDetails.ResourceDescription)</div>
				</div>

				<div class="resources-single__left_post_comment">
					<div class="resources-single__left_post_comment_header">
						<div class="resources-single__left_post_comment_header_left">
							@if (Model.IsUserAuthorized)
							{
								<div class="resources__slide-btn single-post-add" id="@string.Format("{0}_{1}", "addToMyHandBook", Model.Id.ToString())">
									<div id="addToMyHandBook">
										@if (Model.IsResourceAddedToMyHandBook == true)
										{
											<span class='resources--plus anticon anticon-check'></span><span>Added to My A-RIT</span>
										}
										else
										{
											<button type="button" class="addToMyHandBook resources__slide-btn" data-id="@Model.Id.ToString()"> <i class="anticon anticon-plus"></i> Add to My A-RIT </button>
										}
									</div>
								</div>
							}
							<div id="shareBtn" class="resources-single__left_post_comment_header_left_share addthis_inline_share_toolbox_n7k8">
								<a class="addthis_button_compact">
									<i class="anticon anticon-share-alt"></i>
									<span>Share</span>
								</a>
							</div>
						</div>
						<div class="resources-single__left_post_comment_header_right left_comment_area">
							<div class="single-post-comments" id="commentsAmountHeaderID" data-id="@Model.CommentsAmount.ToString()">
								<i class="material-icons">chat_bubble_outline</i>
								@Model.CommentsAmount Comments
							</div>
							<div class="single-post-statistic">
								<button id="@string.Format("{0}_{1}", "resourceLikes" , Model.Id.ToString())" type="button"
										class="addLike anticon anticon-like-o @(Model.Likes.IsResourceLiked?"clicked-like":"" )" 
										data-id="@Model.Id.ToString()" data-id1="@Model.Likes.Likes" title="Add Like"
										data-id2="@(Model.Likes.IsResourceLiked? "liked" : "not_liked")"
										data-id3="@(Model.Likes.IsResourceDisliked? "disliked" : "not_disliked")"
										@(!Model.IsUserAuthorized? "disabled":"")>
									<span>@Model.Likes.Likes</span>
								</button>
								<button id="@string.Format("{0}_{1}", "resourceDisLikes" , Model.Id.ToString())" type="button"
										class="addDislike anticon anticon-dislike-o @(Model.Likes.IsResourceDisliked? "clicked-dislike":"")" 
										data-id="@Model.Id.ToString()" data-id1="@Model.Likes.Dislikes" title="Add Dislike"
										data-id2="@(Model.Likes.IsResourceLiked? "liked" : "not_liked")"
										data-id3="@(Model.Likes.IsResourceDisliked? "disliked" : "not_disliked")"
										@(!Model.IsUserAuthorized? "disabled":"")>
									<span>@Model.Likes.Dislikes</span>
								</button>
							</div>
						</div>
					</div>

					<div class="resources-single__left_post_comment_changer">
						<div class="resources-single-comment active">Comments</div>
						<div class="resources-single-resources">More Resources</div>
					</div>

					<div class="resources-single__left_post_comment_textarea">

						@if (Model.IsUserAuthorized)
						{
							<div id="@string.Format("{0}_{1}", "commentsBlock", Model.Id.ToString())">
								<div class="replyAddComment">
									<div class="textarea-container">
										<textarea placeholder="Add a comment…" name="commentName" id="@string.Format("{0}_{1}", "comment", Model.Id.ToString())"></textarea>
									</div>
									<button type="button"  id="addCommnetBtnID"  class="addCommentBtn" data-id="@Model.Id.ToString()"> Add Comment </button>
								</div>
							</div>
						}
					</div>
				</div>

				<div class="resources-single__comments_list">
					<div class="resources-single__comments_list_header" id="commentsAmountBottomID" data-id="@Model.CommentsAmount.ToString()">
						@Model.CommentsAmount Comments
					</div>
					<div class="resources-single__comments_list_container" id="refTable">
						@Html.Partial("_IAFCHBComments", Model.Comments)
					</div>
				</div>

			</div>
		</div>
		<div class="resources__single">
			<div class="resources-single__right">
				<div class="resources-single__right_header">
					<p>More Resources in <span>@Model.ResourceDetails.Category.CategoryTitle</span></p>
				</div>
				<ul class="resources-single__right_list">
					@{ var firstItem = true;}
					@foreach (var item in Model.MoreResources)
					{
						<li class="resources-single__right_list_item">
							<div class="resources-single__right_list_item_type">
								@if (firstItem == true)
								{
									firstItem = false;
									<span> MOST RECENT &middot; @item.ResourceDetails.ResourceType</span>
								}
								else
								{
									<span> @item.ResourceDetails.ResourceType</span> 
								}
							</div>
							<div class="resources-single__right_list_item_title">
								@{openDocumentLink = ((item.ResourceDetails.ResourceDescription != null && item.ResourceDetails.ResourceDescription != String.Empty)
										|| (item.ResourceDetails.ResourceTypeName == "video"));}
								<button type="button" class="resourceLink"
										data-id="@item.ResourceUrl"
										data-id1="@item.ResourceDetails.ResourceLink"
										data-id2="@item.ResourceDetails.ResourceDocument"
										@(openDocumentLink ?"data-id3=OpenLink":"data-id3=\"\"")>
									<span class="resources__slide-title">@item.ResourceDetails.ResourceTitle</span>
								</button>
							</div>
							<div class="single-post-statistic">
								<button title="Add Like" id="@string.Format("{0}_{1}", "resourceLikes" , item.Id.ToString())" type="button"
										class="addLike anticon anticon-like-o @(item.Likes.IsResourceLiked?"clicked-like":"" )" 
										data-id="@item.Id.ToString()" data-id1="@item.Likes.Likes"
										data-id2="@(item.Likes.IsResourceLiked? "liked" : "not_liked")"
										data-id3="@(item.Likes.IsResourceDisliked? "disliked" : "not_disliked")"
										@(!Model.IsUserAuthorized? "disabled":"")>
									<span>@item.Likes.Likes</span>
								</button>
								<button title="Add Dislike" id="@string.Format("{0}_{1}", "resourceDisLikes" , item.Id.ToString())" type="button"
										class="addDislike anticon anticon-dislike-o @(item.Likes.IsResourceDisliked? "clicked-dislike":"")" 
										data-id="@item.Id.ToString()" data-id1="@item.Likes.Dislikes"
										data-id2="@(item.Likes.IsResourceLiked? "liked" : "not_liked")"
										data-id3="@(item.Likes.IsResourceDisliked? "disliked" : "not_disliked")"
										@(!Model.IsUserAuthorized? "disabled":"")>
									<span>@item.Likes.Dislikes</span>
								</button>
							</div>
						</li>
					}
				</ul>
				<div class="resources-single__right_more">
					<a href='@Model.ResourceDetails.Category.CategoryUrl'>See More</a>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
    var addthis_share;

	$(document).ready(function () {
		$("title").text("@Model.ResourceDetails.ResourceTitle");
		bindEdit();
        addthis_share = {
            url: window.location.href
            
        }
	});


	function bindEdit() {

		$(document).ready(function () {
            function positionSidebar(){
                var $containerWidth = $(window).width();
                if ($containerWidth < 1109) {
                    $('.resources-single-comment').on('click tap', function () {
                        if (!$(this).hasClass('active')) {
                            $(this).addClass('active');
                            $('.resources-single-resources').removeClass('active');
                            $('.resources-single__right').hide();
                            $('.resources-single__comments_list').show();
                            $('.resources-single__left_post_comment_textarea > div').show();
                        }
                    })
                    $('.resources-single-resources').on('click tap', function () {
                        if (!$(this).hasClass('active')) {
                            $(this).addClass('active');
                            $('.resources-single-comment').removeClass('active');
                            $('.resources-single__right').show();
                            $('.resources-single__comments_list').hide();
                            $('.resources-single__left_post_comment_textarea > div').hide();
                        }
                    })
                }
                else {
                    $('.resources-single__left_post_comment_textarea > div').addClass('resources_block_active');
                    $('.resources-single__comments_list').addClass('resources_block_active');
                    $('.resources-single-comment').addClass('resources_block_active');
                    $('.resources-single-resources').addClass('resources_block_active');
                    $('.resources-single__right').addClass('resources_block_active');
                }
            }

            $(document).ready(function () {
                positionSidebar();//run when page first loads
            });

            $(window).resize(function () {
                positionSidebar();//run on every window resize
            });

			//Add Like
			$('.addLike').click(function () {
				var likeAddAmount = 0;
				var dislikeAddAmount = 0;
				var resourceId = $(this).attr('data-id');
				$("#resourceLikes_" + resourceId).prop('disabled', true);
				$("#resourceDisLikes_" + resourceId).prop('disabled', true);
				var isResourceLiked = $(this).attr('data-id2');
				var isResourceDisliked = $(this).attr('data-id3');
				if (isResourceDisliked == "disliked") {
					if (isResourceLiked == "liked") {
						likeAddAmount = -1;
						$("#resourceLikes_" + resourceId).attr('data-id2', "not_liked");						
						$("#resourceDisLikes_" + resourceId).attr('data-id2', "not_liked");												
					}
					else {
						likeAddAmount = 1;
						dislikeAddAmount = -1;
						$("#resourceLikes_" + resourceId).attr('data-id2', "liked");						
						$("#resourceDisLikes_" + resourceId).attr('data-id2', "liked");												
						$("#resourceLikes_" + resourceId).attr('data-id3', "not_disliked");
						$("#resourceDisLikes_" + resourceId).attr('data-id3', "not_disliked");						
					}
				}
				else {
					if (isResourceLiked == "liked") {
						likeAddAmount = -1;
						$("#resourceLikes_" + resourceId).attr('data-id2', "not_liked");						
						$("#resourceDisLikes_" + resourceId).attr('data-id2', "not_liked");
					}
					else {
						likeAddAmount = 1;
						$("#resourceLikes_" + resourceId).attr('data-id2', "liked");						
						$("#resourceDisLikes_" + resourceId).attr('data-id2', "liked");
					}
				}

				var likesAmmount = $(this).attr('data-id1');
				var dislikesAmmount = $("#resourceDisLikes_" + resourceId).attr('data-id1');
				var newLikeResult = parseInt(likesAmmount) + likeAddAmount;
				var newDisLikeResult = parseInt(dislikesAmmount) + dislikeAddAmount;
				$("#resourceLikes_" + resourceId).html(newLikeResult);
				$("#resourceDisLikes_" + resourceId).html(newDisLikeResult);
				likesAmmount = $(this).attr('data-id1', newLikeResult);
				dislikesAmmount = $("#resourceDisLikes_" + resourceId).attr('data-id1', newDisLikeResult);

				$.ajax({
					type: 'POST',
					cache: false,
					url: '@Url.Action("AddLike", "IAFCHBResourceDetailsController")',
					data: { resourceId: resourceId, likeAddAmount: parseInt(likeAddAmount), dislikeAddAmount: parseInt(dislikeAddAmount)  },
					dataType: "json",
					success: function (response) {
						$("#resourceLikes_" + resourceId).prop('disabled', false);
						$("#resourceDisLikes_" + resourceId).prop('disabled', false);
					}
				});
			});

			//Add Dislike
			$('.addDislike').click(function () {
				var likeAddAmount = 0;
				var dislikeAddAmount = 0;
				var resourceId = $(this).attr('data-id');
				$("#resourceLikes_" + resourceId).prop('disabled', true);
				$("#resourceDisLikes_" + resourceId).prop('disabled', true);
				var isResourceLiked = $(this).attr('data-id2');
				var isResourceDisliked = $(this).attr('data-id3');
				if (isResourceLiked == "liked") {
					if (isResourceDisliked == "disliked") {
						dislikeAddAmount = -1;
						$("#resourceLikes_" + resourceId).attr('data-id3', "not_disliked");
						$("#resourceDisLikes_" + resourceId).attr('data-id3', "not_disliked");						
					}
					else {
						dislikeAddAmount = 1;
						likeAddAmount = -1;
						$("#resourceLikes_" + resourceId).attr('data-id2', "not_liked");						
						$("#resourceDisLikes_" + resourceId).attr('data-id2', "not_liked");
						$("#resourceLikes_" + resourceId).attr('data-id3', "disliked");
						$("#resourceDisLikes_" + resourceId).attr('data-id3', "disliked");						
					}
				}
				else {
					if (isResourceDisliked == "disliked") {
						dislikeAddAmount = -1;
						$("#resourceLikes_" + resourceId).attr('data-id3', "not_disliked");
						$("#resourceDisLikes_" + resourceId).attr('data-id3', "not_disliked");

					}
					else {
						dislikeAddAmount = 1;
						$("#resourceLikes_" + resourceId).attr('data-id3', "disliked");
						$("#resourceDisLikes_" + resourceId).attr('data-id3', "disliked");						
					}
				}

				var dislikesAmmount = $(this).attr('data-id1');
				var likesAmmount = $("#resourceLikes_" + resourceId).attr('data-id1');
				var newLikeResult = parseInt(likesAmmount) + likeAddAmount;
				var newDisLikeResult = parseInt(dislikesAmmount) + dislikeAddAmount;
				$("#resourceLikes_" + resourceId).html(newLikeResult);
				$("#resourceDisLikes_" + resourceId).html(newDisLikeResult);
				likesAmmount = $("#resourceLikes_" + resourceId).attr('data-id1', newLikeResult);
				dislikesAmmount = $(this).attr('data-id1', newDisLikeResult);

				$.ajax({
					type: 'POST',
					cache: false,
					url: '@Url.Action("AddDislike", "IAFCHBResourceDetailsController")',
					data: { resourceId: resourceId, likeAddAmount: parseInt(likeAddAmount), dislikeAddAmount: parseInt(dislikeAddAmount)  },
					dataType: "json",
					success: function (response) {
						$("#resourceLikes_" + resourceId).prop('disabled', false);
						$("#resourceDisLikes_" + resourceId).prop('disabled', false);
					}
				});
			});

			//Add ToMyHandBook
			$('.addToMyHandBook').click(function () {

				var resourceId = $(this).attr('data-id');
				var tag_id = "#addToMyHandBook_" + resourceId;

				$.ajax({
					type: 'POST',
					cache: false,
					url: '@Url.Action("AddToMyHandBook", "IAFCHBResourceDetailsController")',
					data: { resourceId: resourceId },
					dataType: "json",
					success: function (response) {
						if (response == true) {
							$(tag_id).html("<span class='resources--plus anticon anticon-check'></span>Added to My A-RIT");
						}
					}
				});
			});

			//Add Comment
			$('.addCommentBtn').click(function () {

				$("#addCommnetBtnID").prop('disabled', true);
				var resourceId = $(this).attr('data-id');
				var commentMsg = $('#comment_' + resourceId).val();
				var comment = commentMsg;
				var commentAmount = parseInt($('#commentsAmountHeaderID').attr('data-id')) + 1;

				$.ajax({
					type: 'POST',
					cache: false,
					url: '@Url.Action("AddComment", "IAFCHBResourceDetailsController")',
					data: { commentTxt: comment, resourceId: resourceId },
					success: function (commentsResults) {
						$("#refTable").removeData();
						$("#refTable").html(commentsResults);
						var inputTxt = $('#comment_' + resourceId);
						inputTxt.replaceWith(inputTxt.val('').clone(true));
						$("#commentsAmountHeaderID").html((commentAmount).toString() + " comments");
						$("#commentsAmountBottomID").html((commentAmount).toString() + " comments");
						bindEdit();
						$("#addCommnetBtnID").prop('disabled', false);
					}

				});
			});

			//Add Comment Like
			$('.addCommentLike').click(function () {
				var likeAddAmount = 0;
				var dislikeAddAmount = 0;
				var resourceId = $(this).attr('data-id');
				$("#commentLikes_" + resourceId).prop('disabled', true);
				$("#commentDislikes_" + resourceId).prop('disabled', true);
				var isResourceLiked = $(this).attr('data-id2');
				var isResourceDisliked = $(this).attr('data-id3');
				if (isResourceDisliked == "disliked") {
					if (isResourceLiked == "liked") {
						likeAddAmount = -1;
						$("#commentLikes_" + resourceId).attr('data-id2', "not_liked");
						$("#commentDislikes_" + resourceId).attr('data-id2', "not_liked");
					}
					else {
						likeAddAmount = 1;
						dislikeAddAmount = -1;
						$("#commentLikes_" + resourceId).attr('data-id2', "liked");
						$("#commentDislikes_" + resourceId).attr('data-id2', "liked");
						$("#commentLikes_" + resourceId).attr('data-id3', "not_disliked");
						$("#commentDislikes_" + resourceId).attr('data-id3', "not_disliked");
					}
				}
				else {
					if (isResourceLiked == "liked") {
						likeAddAmount = -1;
						$("#commentLikes_" + resourceId).attr('data-id2', "not_liked");
						$("#commentDislikes_" + resourceId).attr('data-id2', "not_liked");
					}
					else {
						likeAddAmount = 1;
						$("#commentLikes_" + resourceId).attr('data-id2', "liked");
						$("#commentDislikes_" + resourceId).attr('data-id2', "liked");
					}
				}

				var likesAmmount = $(this).attr('data-id1');
				var dislikesAmmount = $("#commentDislikes_" + resourceId).attr('data-id1');
				var newLikeResult = parseInt(likesAmmount) + likeAddAmount;
				var newDisLikeResult = parseInt(dislikesAmmount) + dislikeAddAmount;
				$("#commentLikes_" + resourceId).html(newLikeResult);
				$("#commentDislikes_" + resourceId).html(newDisLikeResult);
				likesAmmount = $(this).attr('data-id1', newLikeResult);
				dislikesAmmount = $("#commentDislikes_" + resourceId).attr('data-id1', newDisLikeResult);

				$.ajax({
					type: 'POST',
					cache: false,
					url: '@Url.Action("AddCommentLike", "IAFCHBResourceDetailsController")',
					data: { resourceId: resourceId, likeAddAmount: parseInt(likeAddAmount), dislikeAddAmount: parseInt(dislikeAddAmount)  },
					dataType: "json",
					success: function (response) {
						$("#commentLikes_" + resourceId).prop('disabled', false);
						$("#commentDislikes_" + resourceId).prop('disabled', false);
					}
				});
			});

			//Add Comment Dislike
			$('.addCommentDislike').click(function () {
				var likeAddAmount = 0;
				var dislikeAddAmount = 0;
				var resourceId = $(this).attr('data-id');
				$("#commentLikes_" + resourceId).prop('disabled', true);
				$("#commentDislikes_" + resourceId).prop('disabled', true);
				var isResourceLiked = $(this).attr('data-id2');
				var isResourceDisliked = $(this).attr('data-id3');
				if (isResourceLiked == "liked") {
					if (isResourceDisliked == "disliked") {
						dislikeAddAmount = -1;
						$("#commentLikes_" + resourceId).attr('data-id3', "disliked");
						$("#commentDislikes_" + resourceId).attr('data-id3', "disliked");
					}
					else {
						dislikeAddAmount = 1;
						likeAddAmount = -1;
						$("#commentLikes_" + resourceId).attr('data-id2', "not_liked");
						$("#commentDislikes_" + resourceId).attr('data-id2', "not_liked");
						$("#commentLikes_" + resourceId).attr('data-id3', "disliked");
						$("#commentDislikes_" + resourceId).attr('data-id3', "disliked");
					}
				}
				else {
					if (isResourceDisliked == "disliked") {
						dislikeAddAmount = -1;
						$("#commentLikes_" + resourceId).attr('data-id3', "not_disliked");
						$("#commentDislikes_" + resourceId).attr('data-id3', "not_disliked");

					}
					else {
						dislikeAddAmount = 1;
						$("#commentLikes_" + resourceId).attr('data-id3', "disliked");
						$("#commentDislikes_" + resourceId).attr('data-id3', "disliked");

					}
				}

				var dislikesAmmount = $(this).attr('data-id1');
				var likesAmmount = $("#commentLikes_" + resourceId).attr('data-id1');
				var newLikeResult = parseInt(likesAmmount) + likeAddAmount;
				var newDisLikeResult = parseInt(dislikesAmmount) + dislikeAddAmount;
				$("#commentLikes_" + resourceId).html(newLikeResult);
				$("#commentDislikes_" + resourceId).html(newDisLikeResult);
				likesAmmount = $("#commentLikes_" + resourceId).attr('data-id1', newLikeResult);
				dislikesAmmount = $(this).attr('data-id1', newDisLikeResult);


				$.ajax({
					type: 'POST',
					cache: false,
					url: '@Url.Action("AddCommentDislike", "IAFCHBResourceDetailsController")',
					data: { resourceId: resourceId, likeAddAmount: parseInt(likeAddAmount), dislikeAddAmount: parseInt(dislikeAddAmount)  },
					dataType: "json",
					success: function (response) {
						$("#commentLikes_" + resourceId).prop('disabled', false);
						$("#commentDislikes_" + resourceId).prop('disabled', false);
					}
				});
			});

			//Comment Reply btn t1
			$('.commentReplyBtn').click(function () {

				var commentId = $(this).attr('data-id');

				$.ajax({
					type: 'POST',
					cache: false,
					url: '@Url.Action("PressReplyCommentBtn", "IAFCHBResourceDetailsController")',
					data: { commentId: commentId },
					success: function (response) {
						$("#replyCommentBtn_" + commentId).html("");
						$("#commentRepliesInputView_" + commentId).html(response);
						bindEdit();
					}
				});
			});

			//Add Reply Comment Button Pressed
			$('.addReplyCommentBtn').click(function () {

				var commentId = $(this).attr('data-id');
				$("#addReplyCommentBtn_" + commentId).prop('disabled', true);
				var commentMsg = $('#replyComment_' + commentId).val();
				var comment = commentMsg;

				$.ajax({
					type: 'POST',
					cache: false,
					url: '@Url.Action("AddReplyComment", "IAFCHBResourceDetailsController")',
					data: { commentTxt: comment, commentId: commentId },
					success: function (commentsResults) {
						$("#commentRepliesInputView_" + commentId).html(" ");
						$("#commentRepliesView_" + commentId).html(commentsResults);
						$("#replyCommentBtn_" + commentId).html('<button type="button" class="commentReplyBtn" data-id="' + commentId + '"> Reply </button>');
						bindEdit();
						$("#addReplyCommentBtn_" + commentId).prop('disabled', false);
					}

				});
			});

			//Open Resource Details
			$('.resourceLink').click(function () {
				var resourceUrl = $(this).attr("data-id");
				var resourceLinkUrl = $(this).attr('data-id1');
				var resourceDocumentUrl = $(this).attr('data-id2');
				var openResourceDocumentUrl = $(this).attr('data-id3');

				if (openResourceDocumentUrl == "OpenLink") {
					window.location.href = resourceUrl;
				}
				else if (resourceLinkUrl != 'undefined' && resourceLinkUrl != "") {
					window.open(resourceLinkUrl);
				}
				else if (resourceDocumentUrl != 'undefined' && resourceDocumentUrl != "") {
					window.open(resourceDocumentUrl);
				}
			});
		});
	}


</script>
